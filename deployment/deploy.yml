---
- name: Deploy NextJS App to VPS
  hosts: production
  become: yes
  vars_files:
    - vars/secrets.yml
  
  vars:
    app_name: anton-quiz
    app_dir: /opt/{{ app_name }}
    github_repo: https://github.com/vanbeonhv/anton-quiz.git
    app_port: 4000
  
  tasks:
    # ==========================
    # PHẦN 1: CÀI ĐẶT CƠ BẢN
    # ==========================
    
    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600
    
    - name: Cài các package cần thiết
      apt:
        name:
          - git
          - curl
          - nginx
        state: present
    
    # ==========================
    # PHẦN 2: CÀI ĐẶT DOCKER
    # ==========================
    
    - name: Kiểm tra Docker đã cài chưa
      command: docker --version
      register: docker_check
      ignore_errors: yes
      changed_when: false
    
    - name: Cài các package cần thiết cho Docker
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present
      when: docker_check.rc != 0
    
    - name: Thêm Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
      when: docker_check.rc != 0
    
    - name: Thêm Docker repository
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
      when: docker_check.rc != 0
    
    - name: Cài Docker
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-compose-plugin
        state: present
        update_cache: yes
      when: docker_check.rc != 0
    
    - name: Đảm bảo Docker service đang chạy
      systemd:
        name: docker
        state: started
        enabled: yes
    
    - name: Thông báo Docker đã có
      debug:
        msg: "Docker đã được cài đặt hoặc đã có sẵn"
    
    # ==========================
    # PHẦN 3: CLONE/UPDATE CODE TỪ GITHUB
    # ==========================
    
    - name: Tạo thư mục app
      file:
        path: "{{ app_dir }}"
        state: directory
        mode: '0755'
    
    - name: Clone hoặc pull repo từ GitHub
      git:
        repo: "{{ github_repo }}"
        dest: "{{ app_dir }}"
        version: main
        force: yes
    
    # ==========================
    # PHẦN 4: TẠO FILE .ENV
    # ==========================
    
    - name: Tạo file .env từ secrets
      copy:
        content: |
          NEXT_PUBLIC_SUPABASE_URL={{ supabase_url }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY={{ supabase_anon_key }}
          NEXT_PUBLIC_ADMIN_EMAILS={{ admin_emails }}
          DATABASE_URL={{ database_url }}
          DIRECT_URL={{ direct_url }}
        dest: "{{ app_dir }}/.env"
        mode: '0600'
    
    # ==========================
    # PHẦN 5: BUILD VÀ CHẠY DOCKER
    # ==========================
    
    - name: Build Docker image
      command: docker compose build
      args:
        chdir: "{{ app_dir }}"
      environment:
        NEXT_PUBLIC_SUPABASE_URL: "{{ supabase_url }}"
        NEXT_PUBLIC_SUPABASE_ANON_KEY: "{{ supabase_anon_key }}"
        NEXT_PUBLIC_ADMIN_EMAILS: "{{ admin_emails }}"
        DATABASE_URL: "{{ database_url }}"
        DIRECT_URL: "{{ direct_url }}"
    
    - name: Stop container cũ (nếu có)
      command: docker compose down
      args:
        chdir: "{{ app_dir }}"
      ignore_errors: yes
    
    - name: Start Docker container
      command: docker compose up -d
      args:
        chdir: "{{ app_dir }}"
    
    # ==========================
    # PHẦN 6: CÀI ĐẶT NGINX REVERSE PROXY
    # ==========================
    
    - name: Tạo Nginx config cho app
      copy:
        content: |
          server {
              listen 80;
              server_name quiz.huuvan.dev;
              
              location / {
                  proxy_pass http://localhost:{{ app_port }};
                  proxy_http_version 1.1;
                  proxy_set_header Upgrade $http_upgrade;
                  proxy_set_header Connection 'upgrade';
                  proxy_set_header Host $host;
                  proxy_cache_bypass $http_upgrade;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto $scheme;
              }
          }
        dest: /etc/nginx/sites-available/{{ app_name }}
        mode: '0644'
    
    - name: Enable Nginx site
      file:
        src: /etc/nginx/sites-available/{{ app_name }}
        dest: /etc/nginx/sites-enabled/{{ app_name }}
        state: link
    
    - name: Xóa Nginx default site
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent
    
    - name: Test Nginx config
      command: nginx -t
      register: nginx_test
      changed_when: false
    
    - name: Restart Nginx
      systemd:
        name: nginx
        state: restarted
        enabled: yes