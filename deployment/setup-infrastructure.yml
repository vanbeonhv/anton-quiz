---
- name: Setup VPS Infrastructure (One-time setup)
  hosts: production
  become: yes

  vars:
    app_name: anton-quiz
    app_dir: /opt/{{ app_name }}
    github_repo: https://github.com/vanbeonhv/anton-quiz.git
    app_port: 4000
    domain_name: quiz.huuvan.dev
    owner_email: nguyenvannhv26@gmail.com
  
  tasks:
    # ==========================
    # CÀI ĐẶT CƠ BẢN
    # ==========================
    
    - name: Update apt cache
      apt:
        update_cache: yes
        cache_valid_time: 3600
    
    - name: Install base packages
      apt:
        name:
          - git
          - curl
          - nginx
          - apt-transport-https
          - ca-certificates
          - gnupg
          - lsb-release
        state: present
    
    # ==========================
    # CÀI ĐẶT DOCKER
    # ==========================
    
    - name: Check if Docker is installed
      command: docker --version
      register: docker_check
      ignore_errors: yes
      changed_when: false
    
    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
      when: docker_check.rc != 0
    
    - name: Add Docker repository
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
      when: docker_check.rc != 0
    
    - name: Install Docker
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-compose-plugin
        state: present
        update_cache: yes
      when: docker_check.rc != 0
    
    - name: Start and enable Docker service
      systemd:
        name: docker
        state: started
        enabled: yes
    
    # ==========================
    # TẠO THƯ MỤC APP
    # ==========================
    
    - name: Create app directory
      file:
        path: "{{ app_dir }}"
        state: directory
        mode: '0755'
    
    # ==========================
    # CẤU HÌNH NGINX
    # ==========================
    
    - name: Create Nginx config for app
      template:
        content: |
          server {
              listen 80;
              server_name {{ domain_name }};
              
              location / {
                  proxy_pass http://localhost:{{ app_port }};
                  proxy_http_version 1.1;
                  proxy_set_header Upgrade $http_upgrade;
                  proxy_set_header Connection 'upgrade';
                  proxy_set_header Host $host;
                  proxy_cache_bypass $http_upgrade;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto $scheme;
              }
          }
        dest: /etc/nginx/sites-available/{{ app_name }}
        mode: '0644'
    
    - name: Enable Nginx site
      file:
        src: /etc/nginx/sites-available/{{ app_name }}
        dest: /etc/nginx/sites-enabled/{{ app_name }}
        state: link
    
    - name: Remove default Nginx site
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent
    
    - name: Test Nginx config
      command: nginx -t
      changed_when: false
    
    - name: Restart Nginx
      systemd:
        name: nginx
        state: restarted
        enabled: yes
    
    # ==========================
    # CÀI ĐẶT SSL
    # ==========================
    
    - name: Install Certbot
      apt:
        name:
          - certbot
          - python3-certbot-nginx
        state: present
    
    - name: Obtain SSL certificate
      command: >
        certbot --nginx
        -d {{ domain_name }}
        --non-interactive
        --agree-tos
        --email {{ owner_email }}
        --redirect
      args:
        creates: /etc/letsencrypt/live/{{ domain_name }}/fullchain.pem
    
    - name: Setup SSL auto-renewal cron
      cron:
        name: "Renew Let's Encrypt certificates"
        job: "certbot renew --quiet"
        minute: "0"
        hour: "0,12"
    
    - name: Display success message
      debug:
        msg: "Infrastructure setup completed! You can now run deploy-app.yml for deployments."